//
//  EmojiTableViewController.swift
//  EmojiReader
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∞—Å—å—è–Ω–æ–≤ on 27.10.2021.
//

import UIKit

class EmojiTableViewController: UITableViewController {
    
    //–º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–¥–µ–ª–∏ Emoji
    var objects = [
        Emoji(emoji: "ü•∞", name: "Love", description: "Let's love each other", isFavorite: false),
        Emoji(emoji: "‚öΩÔ∏è", name: "Football", description: "Let's play football together", isFavorite: false),
        Emoji(emoji: "üê±", name: "Cat", description: "Cat is the cutest animal", isFavorite: false)
    ]
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false
        
        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        self.title = "Emoji Reader"
        self.navigationItem.leftBarButtonItem = self.editButtonItem
    }
    
    @IBAction func unwindSegue(segue: UIStoryboardSegue) {
        guard segue.identifier == "saveSegue" else { return }
        //–ø—Ä–∏–≤–æ–¥–∏–º –Ω–æ–≤—É—é emoji –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –∫–ª–∞—Å—Å—É –∏ —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç
        let sourceVC = segue.source as! NewEmojiTableViewController
        let emoji = sourceVC.emoji
        //–≤—Å—Ç–∞–≤–ª—è–µ–º –≤ —è—á–µ–π–∫—É –Ω–æ–≤—É—é emoji, –æ–±–Ω–æ–≤–ª—è—è –ø—É—Ç—å, –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤
        //—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–¥–æ–±–∞–≤–∏—Ç—å"
        if let selectedIndexPath = tableView.indexPathForSelectedRow {
            objects[selectedIndexPath.row] = emoji
            tableView.reloadRows(at: [selectedIndexPath], with: .fade)
        } else {
            let newIndexPath = IndexPath(row: objects.count, section: 0)
            objects.append(emoji)
            tableView.insertRows(at: [newIndexPath], with: .fade)
        }
    }
    
    //—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è—á–µ–π–∫–∏
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        super.prepare(for: segue, sender: sender)
        guard segue.identifier == "editEmoji" else { return }
        let indexPath = tableView.indexPathForSelectedRow!
        let emoji = objects[indexPath.row]
        let navigationVC = segue.destination as! UINavigationController
        let newEmojiVC = navigationVC.topViewController as! NewEmojiTableViewController
        newEmojiVC.emoji = emoji
        newEmojiVC.title = "Edit"
    }
    
    // MARK: - Table view data source
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return objects.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        //—Å–æ–∑–¥–∞—ë–º —è—á–µ–π–∫—É –∏ –ø—Ä–∏–≤–æ–¥–∏–º –µ—ë –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É
        let cell = tableView.dequeueReusableCell(withIdentifier: "emojiCell", for: indexPath) as! EmojiTableViewCell
        //–ø–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É
        let object = objects[indexPath.row]
        cell.set(object: object)
        
        return cell
    }
    //–º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —è—á–µ–µ–∫
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCell.EditingStyle {
        return .delete
    }
    //–¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —è—á–µ–π–∫–∏
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            //—É–¥–∞–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞
            objects.remove(at: indexPath.row)
            //—É–¥–∞–ª—è–µ–º —è—á–µ–π–∫—É
            tableView.deleteRows(at: [indexPath], with: .fade)
        }
    }
    //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —è—á–µ–µ–∫
    override func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        return true
    }
    //–ª–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —è—á–µ–µ–∫
    override func tableView(_ tableView: UITableView, moveRowAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {
        //—É–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–º–µ—â–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
        let movedEmoji = objects.remove(at: sourceIndexPath.row)
        //–≤—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ –Ω–∞ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ
        objects.insert(movedEmoji, at: destinationIndexPath.row)
        //–æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —è—á–µ–µ–∫
        tableView.reloadData()
    }
    //—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ —Å–≤–∞–π–ø–µ –≤–ø—Ä–∞–≤–æ
    override func tableView(_ tableView: UITableView, leadingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration? {
        let done = doneAction(at: indexPath)
        let favourite = favouriteAction(at: indexPath)
        return UISwipeActionsConfiguration(actions: [done, favourite])
    }
    //—Å–æ–∑–¥–∞–Ω–∏–µ –∑–Ω–∞—á–∫–∞ Done –∏ –µ–≥–æ –ª–æ–≥–∏–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —è—á–µ–π–∫–∏
    func doneAction(at indexPath: IndexPath) -> UIContextualAction {
        let action = UIContextualAction(style: .destructive, title: "Done") { (action, view, completion) in
            self.objects.remove(at: indexPath.row)
            self.tableView.deleteRows(at: [indexPath], with: .automatic)
            completion(true)
        }
        action.backgroundColor = .systemGreen
        action.image = UIImage(systemName: "checkmark.circle")
        return action
    }
    //—Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏–∫–∏ –∑–Ω–∞—á–∫–∞ Favourite
    func favouriteAction(at indexPath: IndexPath) -> UIContextualAction {
        //"–¥–æ—Å—Ç–∞—ë–º" –∑–Ω–∞—á–µ–Ω–∏–µ object –∏–∑ –º–∞—Å—Å–∏–≤–∞
        var object = objects[indexPath.row]
        let action = UIContextualAction(style: .normal, title: "Favourite") { (action, view, completion) in
            //–º–µ–Ω—è–µ–º –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ –ø—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–∏
            object.isFavorite = !object.isFavorite
            self.objects[indexPath.row] = object
            completion(true)
        }
        //–∑–∞–¥–∞—ë–º —Ü–≤–µ—Ç
        action.backgroundColor = object.isFavorite ? .systemPurple : .systemGray
        action.image = UIImage(systemName: "heart")
        return action
    }
}
